#!/bin/bash
# vi:syntax=sh

set -ue

# Default to yesterday so we get a full days reconciliation
DEFAULT_DATE=$(date +%F --date '-1 days')

DATE_TO_RECONCILE=${1:-${DEFAULT_DATE}}
OUTPUT_FILE_NAME=CMC$(date -d ${DATE_TO_RECONCILE} +%Y%m%d0000).csv

OUTPUT_DIR={{ reporting_output_directory }}
TO_ADDRESS={{ payment_reconciliation_to_address }}
CC_ADDRESS={{ payment_reconciliation_cc_address | default('') }}
FAILURE_ADDRESS={{ reporting_failure_address }}

function log() {
  echo $(date --rfc-3339=seconds)" ${1}"
}

function errorHandler() {
  local payment_failed_error="Payment reconciliation report failed for ${DATE_TO_RECONCILE}"
  local environment=$(getEnvironment)
  log "${payment_failed_error}"
  echo -e "Hi\n${payment_failed_error} in ${environment}" | mail -s "Payment reconciliation ${DATE_TO_RECONCILE} failed in ${environment}" -r "noreply@reform.hmcts.net (Money Claim Payments)" ${FAILURE_ADDRESS}
}

function getEnvironment() {
    case $(hostname | awk '{print tolower($0)}') in
    betadeva*)
      ENV=Dev
      ;;
    betadevb*)
      ENV=Test
      ;;
    betademo*)
      ENV=Demo
      ;;
    betapreprod*)
      ENV=Staging
      ;;
    betaprod*)
      ENV=Production
      ;;
      *)
      log 'Unknown environment' || false
    esac
    echo ${ENV}
}

trap errorHandler ERR

if [[ -z "${CC_ADDRESS}" ]]; then
    CC_COMMAND=""
    CC_LOG_MESSAGE=""
else
    CC_COMMAND="-c ${CC_ADDRESS}"
    CC_LOG_MESSAGE="copied to: ${CC_ADDRESS}"
fi
mkdir -p ${OUTPUT_DIR}

log "Running payment reconciliation query"
QUERY=$(cat <<EOF
COPY(
    SELECT
        (string_to_array(json_extract_path_text(claim::json, 'payment', 'reference'), '\$\$\$'))[2] AS unique_id,
        reference_number AS case_reference,
        json_extract_path_text(claim::json, 'payment', 'reference') AS payment_reference,
        created_at AS case_created_date,
        to_timestamp((json_extract_path_text(claim::json, 'payment', 'date_created')::NUMERIC / 1000)) AS payment_date,
        'gov pay' AS payment_channel,
        ('Â£' || (round(json_extract_path_text(claim::json, 'payment', 'amount')::NUMERIC / 100, 2))) AS amount
    FROM claim WHERE reference_number like '%MC%'
    AND created_at >= date '${DATE_TO_RECONCILE}'
    AND created_at < date '${DATE_TO_RECONCILE}' + INTERVAL '1 DAY') TO STDOUT WITH CSV HEADER
EOF
)
psql -d claimstore -c "${QUERY}"  > ${OUTPUT_DIR}/${OUTPUT_FILE_NAME}

PAYMENT_COUNT=$(awk '{if (NR!=1) {print}}' ${OUTPUT_DIR}/${OUTPUT_FILE_NAME} | wc -l)

log "Finished payment reconciliation query, there was ${PAYMENT_COUNT} payments on ${DATE_TO_RECONCILE}"

log "Sending email with payment reconciliation results to: ${TO_ADDRESS} ${CC_LOG_MESSAGE}"
echo -e "Hi\nPlease find attached payment reconciliation report for ${DATE_TO_RECONCILE}.\nThere was ${PAYMENT_COUNT} payment(s)" | mail -s "Payment reconciliation ${DATE_TO_RECONCILE}" -a ${OUTPUT_DIR}/${OUTPUT_FILE_NAME} -r "noreply@reform.hmcts.net (Money Claim Payments)" ${CC_COMMAND} ${TO_ADDRESS}
log "Payment reconciliation results sent"
